set(PLATFORM "MAC_UNIVERSAL")
include(${ios_cmake_SOURCE_DIR}/ios.toolchain.cmake)

# Info.plist
set(INFO_PLIST_IN_PATH ${CMAKE_CURRENT_SOURCE_DIR}/Info.plist.in)
set(INFO_PLIST_PATH ${CMAKE_CURRENT_BINARY_DIR}/Info.plist)
configure_file(${INFO_PLIST_IN_PATH} ${INFO_PLIST_PATH})

set(APP_RESOURCES
    Main.storyboard
    ${MODEL_FILES}
)

file(GLOB_RECURSE SOURCES "*.m" "*.mm")
file(GLOB_RECURSE HEADERS "*.h")
add_executable(example MACOSX_BUNDLE
    ${HEADERS}
    ${SOURCES}
    ${APP_RESOURCES}
)

find_library(COCOA_LIBRARY Cocoa)
find_library(FOUNDATION_LIBRARY Foundation)
find_library(SCENEKIT_LIBRARY SceneKit)

target_link_libraries(example GLTF2SceneKit ${COCOA_LIBRARY} ${FOUNDATION_LIBRARY} ${SCENEKIT_LIBRARY})

target_include_directories(example PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}
)

set_target_properties(example PROPERTIES
    RESOURCE "${APP_RESOURCES}"
    BUILD_WITH_INSTALL_RPATH TRUE
    INSTALL_RPATH @executable_path/../Frameworks
    MACOSX_BUNDLE_INFO_PLIST ${INFO_PLIST_PATH}
    XCODE_ATTRIBUTE_CLANG_ENABLE_OBJC_ARC YES
    XCODE_ATTRIBUTE_INFOPLIST_FILE ${INFO_PLIST_PATH}
    XCODE_EMBED_FRAMEWORKS GLTF2
    XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY TRUE
    XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY TRUE
)

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES
    ${HEADERS}
    ${SOURCES}
    Main.storyboard
)
source_group(TREE ${PROJECT_SOURCE_DIR} FILES ${MODEL_FILES})
